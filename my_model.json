
////网络配置文件
{ 
	//json中，对象的元素是“键值对”
		"train":{
		// 初始学习率
        "learning rate" : 0.001,    //学习率太大loss容易出现NAN
        // 学习率衰减: 通常设置为 0.99
        "lr decay": 0.9999,  
        // 优化策略: sgd/momentum/rmsprop
        "optimizer": "momentum",
        // 如果想使用添加动量的梯度下降算法做优化,需要设置这一项，通常设置为 0.9/0.95 即可，一般不需要调整
        "momentum coefficient": 0.95,		
		// 如果想使用RMSProp算法做优化,需要设置这一项，通常设置为 0.98或0.99 即可，一般不需要调整
        "rmsprop decay": 0.99,
	    // 正则系数(若为0则意味着不添加正则化效果)
        "reg coefficient": 0,
		// 全部样本训练一遍就是一个epoch
        "num epochs": 400,   //1200
        // batch size
        "batch size": 100,
        // 每隔几个迭代周期评估一次准确率？
        "evaluate interval": 20,              
        // 是否更新学习率？  true/false    
        "lr update": true,    
		// 是否需要保存模型快照？ true/false
        "snapshot": false,
	    // 每隔几个迭代周期保存一次快照？
        "snapshot interval": 222,
		// 是否以fine_tune方式训练？ true/false
        "fine tune": false,
	    // 预训练参数模型所在路径
        "pre train model": ""
	} ,
	//json文件中，键值类型可以是：数值，字符串，布尔数，数组
	"net":[
		{
			"name":"conv1",//层名
			"type":"Conv", //层类型
			"kernel num":4,//卷积核个数
			"kernel height":5,//卷积核高
			"kernel width":5,//卷积核宽
			"pad":1,//填充数
			"stride":1,//滑动步长
			"conv weight init": "gaussian"//权重初始化  gaussian/msra
		},
		{
				"name":"bn1",//加了BN层的效果：1.训练集损失下降明显加快  2.具备一定正则化效果（val_acc提高了一点）    3.抑制了多层fc的梯度消失
				"type" : "BN"//层类型
		},
		{
				"name":"sc1",//层名
				"type" : "Scale"//层类型
		},
		{
			"name":"tanh0",//层名
			"type":"Tanh"//层类型
		},
		{
			"name":"pool1",//层名
			"type":"Pool",//层类型
			"kernel height":2,//池化核高
			"kernel width":2,//池化核宽
			"stride":1 //滑动步长
		},
		{
			"name":"fc1",//层名
			"type":"Fc",//层类型
			"kernel num":10 ,//神经元个数
			"fc weight init": "gaussian"//权重初始化  gaussian/msra
		},
		{
			"name":"softmax",//层名
			"type":"Softmax"//层类型
		}
	]    
}